{"version":3,"file":"static/js/984.1652c401.chunk.js","mappings":"oPAEaA,EAAgBC,EAAAA,GAAAA,GAAH,4GAObC,EAAQD,EAAAA,GAAAA,GAAH,oEAKLE,EAAOF,EAAAA,GAAAA,EAAH,+GAOJG,EAAQH,EAAAA,GAAAA,GAAH,+H,8BCnBLI,EAAcJ,EAAAA,GAAAA,KAAH,4PAWXK,EAAYL,EAAAA,GAAAA,MAAH,gIAQTM,EAAYN,EAAAA,GAAAA,MAAH,0SAgBTO,EAAcP,EAAAA,GAAAA,MAAH,gIAQXQ,EAAcR,EAAAA,GAAAA,MAAH,0SAgBXS,EAAYT,EAAAA,GAAAA,OAAH,ib,oBC3DlBU,EAAY,YAgFT,IAAIC,EAAuB,SAA8BC,EAAGC,GACjE,OAAOD,IAAMC,CACd,EAqBM,SAASC,EAAeC,EAAMC,GACnC,IAAIC,EAAoD,kBAA3BD,EAAsCA,EAAyB,CAC1FE,cAAeF,GAEbG,EAAwBF,EAAgBC,cACxCA,OAA0C,IAA1BC,EAAmCR,EAAuBQ,EAC1EC,EAAwBH,EAAgBI,QACxCA,OAAoC,IAA1BD,EAAmC,EAAIA,EACjDE,EAAsBL,EAAgBK,oBACtCC,EA7BC,SAAkCL,GACvC,OAAO,SAAoCM,EAAMC,GAC/C,GAAa,OAATD,GAA0B,OAATC,GAAiBD,EAAKE,SAAWD,EAAKC,OACzD,OAAO,EAMT,IAFA,IAAIA,EAASF,EAAKE,OAETC,EAAI,EAAGA,EAAID,EAAQC,IAC1B,IAAKT,EAAcM,EAAKG,GAAIF,EAAKE,IAC/B,OAAO,EAIX,OAAO,CACR,CACF,CAYkBC,CAAyBV,GACtCW,EAAoB,IAAZR,EA/Gd,SAA8BS,GAC5B,IAAIC,EACJ,MAAO,CACLC,IAAK,SAAaC,GAChB,OAAIF,GAASD,EAAOC,EAAME,IAAKA,GACtBF,EAAMG,MAGRxB,CACR,EACDyB,IAAK,SAAaF,EAAKC,GACrBH,EAAQ,CACNE,IAAKA,EACLC,MAAOA,EAEV,EACDE,WAAY,WACV,OAAOL,EAAQ,CAACA,GAAS,EAC1B,EACDM,MAAO,WACLN,OAAQO,CACT,EAEJ,CAwF6BC,CAAqBhB,GAtFnD,SAAwBF,EAASS,GAC/B,IAAIU,EAAU,GAEd,SAASR,EAAIC,GACX,IAAIQ,EAAaD,EAAQE,WAAU,SAAUX,GAC3C,OAAOD,EAAOG,EAAKF,EAAME,IAC1B,IAED,GAAIQ,GAAc,EAAG,CACnB,IAAIV,EAAQS,EAAQC,GAOpB,OALIA,EAAa,IACfD,EAAQG,OAAOF,EAAY,GAC3BD,EAAQI,QAAQb,IAGXA,EAAMG,KACd,CAGD,OAAOxB,CACR,CAwBD,MAAO,CACLsB,IAAKA,EACLG,IAxBF,SAAaF,EAAKC,GACZF,EAAIC,KAASvB,IAEf8B,EAAQI,QAAQ,CACdX,IAAKA,EACLC,MAAOA,IAGLM,EAAQd,OAASL,GACnBmB,EAAQK,MAGb,EAaCT,WAXF,WACE,OAAOI,CACR,EAUCH,MARF,WACEG,EAAU,EACX,EAQF,CAmCgEM,CAAezB,EAASE,GAEvF,SAASwB,IACP,IAAIb,EAAQL,EAAMG,IAAIgB,WAEtB,GAAId,IAAUxB,EAAW,CAIvB,GAFAwB,EAAQnB,EAAKkC,MAAM,KAAMD,WAErB1B,EAAqB,CACvB,IAAIkB,EAAUX,EAAMO,aAChBc,EAAgBV,EAAQW,MAAK,SAAUpB,GACzC,OAAOT,EAAoBS,EAAMG,MAAOA,EACzC,IAEGgB,IACFhB,EAAQgB,EAAchB,MAEzB,CAEDL,EAAMM,IAAIa,UAAWd,EACtB,CAED,OAAOA,CACR,CAMD,OAJAa,EAASK,WAAa,WACpB,OAAOvB,EAAMQ,OACd,EAEMU,CACR,CC/ID,SAASM,EAAgBC,GACvB,IAAIC,EAAeC,MAAMC,QAAQH,EAAM,IAAMA,EAAM,GAAKA,EAExD,IAAKC,EAAaG,OAAM,SAAUC,GAChC,MAAsB,oBAARA,CACf,IAAG,CACF,IAAIC,EAAkBL,EAAaM,KAAI,SAAUF,GAC/C,MAAsB,oBAARA,EAAqB,aAAeA,EAAIG,MAAQ,WAAa,YAAcH,CAC1F,IAAEI,KAAK,MACR,MAAM,IAAI5D,MAAM,kGAAoGyD,EAAkB,IACvI,CAED,OAAOL,CACR,CAEM,SAASS,EAAsBC,GACpC,IAAK,IAAIC,EAAOlB,UAAUtB,OAAQyC,EAAyB,IAAIX,MAAMU,EAAO,EAAIA,EAAO,EAAI,GAAIE,EAAO,EAAGA,EAAOF,EAAME,IACpHD,EAAuBC,EAAO,GAAKpB,UAAUoB,GAG/C,IAAIC,EAAiB,WACnB,IAAK,IAAIC,EAAQtB,UAAUtB,OAAQ4B,EAAQ,IAAIE,MAAMc,GAAQC,EAAQ,EAAGA,EAAQD,EAAOC,IACrFjB,EAAMiB,GAASvB,UAAUuB,GAG3B,IAEIC,EAFAC,EAAkB,EAOlBC,EAAwB,CAC1BC,oBAAgBrC,GAGdsC,EAAatB,EAAMT,MAQvB,GAN0B,kBAAf+B,IACTF,EAAwBE,EAExBA,EAAatB,EAAMT,OAGK,oBAAf+B,EACT,MAAM,IAAIzE,MAAM,qFAAuFyE,EAAa,KAKtH,IAAIC,EAAwBH,EACxBI,EAAyBD,EAAsBF,eAC/CA,OAA4C,IAA3BG,EAAoCX,EAAyBW,EAM9EC,EAAsBvB,MAAMC,QAAQkB,GAAkBA,EAAiB,CAACA,GACxEpB,EAAeF,EAAgBC,GAC/B0B,EAAqBf,EAAQhB,WAAM,EAAQ,CAAC,WAG9C,OAFAwB,IAEOG,EAAW3B,MAAM,KAAMD,UAC/B,GAAEiC,OAAOF,IAENG,EAAWjB,GAAQ,WAIrB,IAHA,IAAIkB,EAAS,GACTzD,EAAS6B,EAAa7B,OAEjBC,EAAI,EAAGA,EAAID,EAAQC,IAG1BwD,EAAOC,KAAK7B,EAAa5B,GAAGsB,MAAM,KAAMD,YAK1C,OADAwB,EAAcQ,EAAmB/B,MAAM,KAAMkC,EAE9C,IAeD,OAdAE,OAAOC,OAAOJ,EAAU,CACtBN,WAAYA,EACZI,mBAAoBA,EACpBzB,aAAcA,EACdgC,WAAY,WACV,OAAOf,CACR,EACDgB,eAAgB,WACd,OAAOf,CACR,EACDgB,oBAAqB,WACnB,OAAOhB,EAAkB,CAC1B,IAEIS,CACR,EAGD,OAAOb,CACR,CACM,I,gBAAIA,EAAgCL,EAAsBlD,GCrGpD4E,EAAiB,SAAAC,GAAK,OAAIA,EAAMC,SAASC,KAAnB,EACtBC,EAAkB,SAAAH,GAAK,OAAIA,EAAMC,SAASG,SAAnB,EACvBC,EAAc,SAAAL,GAAK,OAAIA,EAAMC,SAASK,KAAnB,EAEnBC,EAAe,SAAAP,GAAK,OAAIA,EAAMQ,MAAV,EAEpBC,EAAyB/B,EACpC,CAACqB,EAAgBQ,IACjB,SAACN,EAAUS,GACT,IAAMC,EAAmBD,EAAYE,cAErC,OAAOX,EAASO,QAAO,SAAAK,GAAO,OAC5BA,EAAQ1C,KAAKyC,cAAcE,SAASH,EADR,GAG/B,I,UCAUI,EAAc,WACzB,IAAMC,GAAcC,EAAAA,EAAAA,MACdC,GAAgBD,EAAAA,EAAAA,MACtB,GAAwBE,EAAAA,EAAAA,UAAS,IAAjC,eAAOhD,EAAP,KAAaiD,EAAb,KACA,GAA4BD,EAAAA,EAAAA,UAAS,IAArC,eAAOE,EAAP,KAAeC,EAAf,KAEMC,EAAe,SAAAC,GACnB,MAAwBA,EAAEC,cAAlBtD,EAAR,EAAQA,KAAM5B,EAAd,EAAcA,MACd,OAAQ4B,GACN,IAAK,OACHiD,EAAQ7E,GACR,MACF,IAAK,SACH+E,EAAU/E,GACV,MACF,QACE,OAEL,EAEKmF,GAAeC,EAAAA,EAAAA,IAAY5B,GAC3B6B,GAAWC,EAAAA,EAAAA,MAcXC,EAAQ,WACZV,EAAQ,IACRE,EAAU,GACX,EAED,OACE,UAAC7G,EAAD,CAAasH,SAlBM,SAAAP,GACnBA,EAAEQ,iBACF,IAAMnB,EAAU,CACd1C,KAAMqD,EAAES,OAAOC,SAAS/D,KAAK5B,MAC7B8E,OAAQG,EAAES,OAAOC,SAASb,OAAO9E,QCzCd,SAAC4B,EAAM8B,GAC9B,IAAMkC,EAAiBhE,EAAKyC,cAI5B,GAHkBX,EAASzC,MACzB,SAAAqD,GAAO,OAAIA,EAAQ1C,KAAKyC,gBAAkBuB,CAAnC,IAIP,OADAC,EAAAA,GAAAA,QAAA,UAAiBjE,EAAjB,8BACO,CAEV,EDkCQkE,CAAUlE,EAAMuD,IACnBE,GAASU,EAAAA,EAAAA,IAAWzB,IAEtBiB,GACD,EAQC,WACE,SAACpH,EAAD,CAAW6H,QAASvB,EAApB,mBACA,SAACrG,EAAD,CACE6H,KAAK,OACLrE,KAAK,OACLsE,QAAQ,yHACRC,MAAM,yIACNC,UAAQ,EACRpG,MAAO4B,EACPyE,GAAI5B,EACJ6B,SAAUtB,KAEZ,SAAC3G,EAAD,CAAa2H,QAASrB,EAAtB,qBACA,SAACrG,EAAD,CACE2H,KAAK,MACLrE,KAAK,SACLsE,QAAQ,yFACRC,MAAM,+FACNC,UAAQ,EACRC,GAAI1B,EACJ3E,MAAO8E,EACPwB,SAAUtB,KAEZ,SAACzG,EAAD,CAAW0H,KAAK,SAAhB,2BAGL,EEjFYM,EAAkBzI,EAAAA,GAAAA,IAAH,qJASf0I,EAAe1I,EAAAA,GAAAA,GAAH,yCAIZ2I,GAAmB3I,EAAAA,GAAAA,GAAH,qGCbhB4I,GAAc5I,EAAAA,GAAAA,EAAH,4aAcX6I,GAAY7I,EAAAA,GAAAA,OAAH,gbCVT8I,GAAU,SAAC,GAAiB,IAAftC,EAAc,EAAdA,QAChB+B,EAAqB/B,EAArB+B,GAAIzE,EAAiB0C,EAAjB1C,KAAMkD,EAAWR,EAAXQ,OAEZO,GAAWC,EAAAA,EAAAA,MAGjB,OACE,iCACE,UAACoB,GAAD,WACG9E,EADH,KACWkD,MAEX,SAAC6B,GAAD,CAAWV,KAAK,SAASrE,KAAK,SAASiF,QAPnB,kBAAMxB,GAASyB,EAAAA,EAAAA,IAAcT,GAA7B,EAOpB,sBAKL,ECbYU,GAAc,WACzB,IAAMC,GAAmB5B,EAAAA,EAAAA,IAAYlB,GACrC,OACE,SAACqC,EAAD,WACE,SAACC,EAAD,UACGQ,EAAiBrF,KAAI,SAAA2C,GAAO,OAC3B,SAACmC,GAAD,WACE,SAACG,GAAD,CAAStC,QAASA,KADGA,EAAQ+B,GADJ,OAQpC,ECpBYY,GAAgBnJ,EAAAA,GAAAA,IAAH,gKAOboJ,GAAcpJ,EAAAA,GAAAA,MAAH,2GAOXqJ,GAAcrJ,EAAAA,GAAAA,MAAH,4P,WCLXsJ,GAAS,WACpB,IAAMjD,GAAciB,EAAAA,EAAAA,IAAYpB,GAC1BqB,GAAWC,EAAAA,EAAAA,MAMjB,OACE,UAAC2B,GAAD,YACE,SAACC,GAAD,qCACA,SAACC,GAAD,CAAalB,KAAK,OAAOjG,MAAOmE,EAAamC,SAP1B,SAAArB,GACrBI,GAASgC,EAAAA,GAAAA,GAAapC,EAAEC,cAAclF,OACvC,MAQF,E,WCuBD,GA/BiB,WACf,IAAMqF,GAAWC,EAAAA,EAAAA,MACXH,GAAeC,EAAAA,EAAAA,IAAY5B,GAC3BK,GAAYuB,EAAAA,EAAAA,IAAYxB,GACxBG,GAAQqB,EAAAA,EAAAA,IAAYtB,GAM1B,OAJAwD,EAAAA,EAAAA,YAAU,WACRjC,GAASkC,EAAAA,EAAAA,MACV,GAAE,CAAClC,KAGF,iCACE,SAACtH,EAAD,yBACA,SAACyG,EAAD,KACA,SAAC3G,EAAD,wBACA,SAACuJ,GAAD,IACCvD,IAAcE,IAAS,SAACyD,GAAA,EAAD,IAEvBrC,EAAa3F,OAAS,GACrB,SAACuH,GAAD,KAEA,SAAC/I,EAAD,0DAID+F,IAAS,SAAC,EAAD,oDACV,SAAC,KAAD,CAAgB0D,UAAW,QAGhC,C,wDC7CM,IAkBI/C,EAAS,eAACgD,EAAD,uDAAQ,GAAR,OAClBC,OAAOC,gBAAgB,IAAIC,WAAWH,IAAOI,QAAO,SAACzB,EAAI0B,GAWvD,OARE1B,IAFF0B,GAAQ,IACG,GACHA,EAAKC,SAAS,IACXD,EAAO,IACTA,EAAO,IAAIC,SAAS,IAAIC,cACtBF,EAAO,GACV,IAEA,GAGT,GAAE,GAbe,C","sources":["pages/Contacts.styled.js","components/ContactForm/ContactForm.styled.js","../node_modules/reselect/es/defaultMemoize.js","../node_modules/reselect/es/index.js","redux/contacts/contacts-selectors.js","components/ContactForm/ContactForm.jsx","service-functions.js","components/ContactList/ContactList.styled.js","components/Contact/Contact.styled.js","components/Contact/Contact.jsx","components/ContactList/ContactList.jsx","components/Filter/Filter.styled.js","components/Filter/Filter.jsx","pages/Contacts.jsx","../node_modules/nanoid/index.browser.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const ContactsTitle = styled.h2`\n  margin: 20px 0;\n  text-align: center;\n  font-weight: bold;\n  font-size: 28px;\n`;\n\nexport const Title = styled.h1`\n  margin-top: 20px;\n  text-align: center;\n`;\n\nexport const Text = styled.p`\n  text-align: center;\n  font-size: 20px;\n  padding: 5px 0px;\n  font-style: italic;\n`;\n\nexport const Error = styled.h4`\n  margin-top: 10px;\n  margin-bottom: 10px;\n  color: red;\n  font-size: 14px;\n  font-style: italic;\n`;\n","import styled from 'styled-components';\n\nexport const FormWrapper = styled.form`\n  display: flex;\n  flex-direction: column;\n  width: 400px;\n  padding: 12px;\n  border: 3px solid;\n  border-radius: 15px;\n  margin: 40px auto 0;\n  background: radial-gradient(circle at 24.1% 68.8%, #323232 0, #000 99.4%);\n`;\n\nexport const NameLabel = styled.label`\n  display: flex;\n  flex-direction: column;\n  font-size: 20px;\n  font-weight: bold;\n  color: white;\n`;\n\nexport const NameInput = styled.input`\n  margin-top: 5px;\n  padding: 8px 12px;\n  font: inherit;\n  cursor: pointer;\n  border: 1px solid black;\n  margin-bottom: 16px;\n  border-radius: 5px;\n\n  &:focus {\n    outline: none;\n    border-color: red;\n    box-shadow: 0 0 3px 0 red inset, 0 0 3px 2px red;\n  }\n`;\n\nexport const NumberLabel = styled.label`\n  display: flex;\n  flex-direction: column;\n  font-size: 20px;\n  font-weight: bold;\n  color: white;\n`;\n\nexport const NumberInput = styled.input`\n  margin-top: 5px;\n  padding: 8px 12px;\n  margin-bottom: 16px;\n  font: inherit;\n  cursor: pointer;\n  border: 1px solid black;\n  border-radius: 5px;\n\n  &:focus {\n    outline: none;\n    border-color: red;\n    box-shadow: 0 0 3px 0 red inset, 0 0 3px 2px red;\n  }\n`;\n\nexport const SubmitBtn = styled.button`\n  padding: 8px 12px;\n  font: inherit;\n  cursor: pointer;\n  border-radius: 4px;\n  font-size: 20px;\n  border: none;\n  color: white;\n  background: linear-gradient(\n    98.3deg,\n    rgb(0, 0, 0) 10.6%,\n    rgb(255, 0, 0) 97.7%\n  );\n  transition: all 150ms ease-in-out;\n\n  &:hover {\n    color: white;\n    text-shadow: 0 0 2px black;\n    box-shadow: 0 0 3px 0 black inset, 0 0 3px 2px black;\n  }\n`;\n","// Cache implementation based on Erik Rasmussen's `lru-memoize`:\n// https://github.com/erikras/lru-memoize\nvar NOT_FOUND = 'NOT_FOUND';\n\nfunction createSingletonCache(equals) {\n  var entry;\n  return {\n    get: function get(key) {\n      if (entry && equals(entry.key, key)) {\n        return entry.value;\n      }\n\n      return NOT_FOUND;\n    },\n    put: function put(key, value) {\n      entry = {\n        key: key,\n        value: value\n      };\n    },\n    getEntries: function getEntries() {\n      return entry ? [entry] : [];\n    },\n    clear: function clear() {\n      entry = undefined;\n    }\n  };\n}\n\nfunction createLruCache(maxSize, equals) {\n  var entries = [];\n\n  function get(key) {\n    var cacheIndex = entries.findIndex(function (entry) {\n      return equals(key, entry.key);\n    }); // We found a cached entry\n\n    if (cacheIndex > -1) {\n      var entry = entries[cacheIndex]; // Cached entry not at top of cache, move it to the top\n\n      if (cacheIndex > 0) {\n        entries.splice(cacheIndex, 1);\n        entries.unshift(entry);\n      }\n\n      return entry.value;\n    } // No entry found in cache, return sentinel\n\n\n    return NOT_FOUND;\n  }\n\n  function put(key, value) {\n    if (get(key) === NOT_FOUND) {\n      // TODO Is unshift slow?\n      entries.unshift({\n        key: key,\n        value: value\n      });\n\n      if (entries.length > maxSize) {\n        entries.pop();\n      }\n    }\n  }\n\n  function getEntries() {\n    return entries;\n  }\n\n  function clear() {\n    entries = [];\n  }\n\n  return {\n    get: get,\n    put: put,\n    getEntries: getEntries,\n    clear: clear\n  };\n}\n\nexport var defaultEqualityCheck = function defaultEqualityCheck(a, b) {\n  return a === b;\n};\nexport function createCacheKeyComparator(equalityCheck) {\n  return function areArgumentsShallowlyEqual(prev, next) {\n    if (prev === null || next === null || prev.length !== next.length) {\n      return false;\n    } // Do this in a for loop (and not a `forEach` or an `every`) so we can determine equality as fast as possible.\n\n\n    var length = prev.length;\n\n    for (var i = 0; i < length; i++) {\n      if (!equalityCheck(prev[i], next[i])) {\n        return false;\n      }\n    }\n\n    return true;\n  };\n}\n// defaultMemoize now supports a configurable cache size with LRU behavior,\n// and optional comparison of the result value with existing values\nexport function defaultMemoize(func, equalityCheckOrOptions) {\n  var providedOptions = typeof equalityCheckOrOptions === 'object' ? equalityCheckOrOptions : {\n    equalityCheck: equalityCheckOrOptions\n  };\n  var _providedOptions$equa = providedOptions.equalityCheck,\n      equalityCheck = _providedOptions$equa === void 0 ? defaultEqualityCheck : _providedOptions$equa,\n      _providedOptions$maxS = providedOptions.maxSize,\n      maxSize = _providedOptions$maxS === void 0 ? 1 : _providedOptions$maxS,\n      resultEqualityCheck = providedOptions.resultEqualityCheck;\n  var comparator = createCacheKeyComparator(equalityCheck);\n  var cache = maxSize === 1 ? createSingletonCache(comparator) : createLruCache(maxSize, comparator); // we reference arguments instead of spreading them for performance reasons\n\n  function memoized() {\n    var value = cache.get(arguments);\n\n    if (value === NOT_FOUND) {\n      // @ts-ignore\n      value = func.apply(null, arguments);\n\n      if (resultEqualityCheck) {\n        var entries = cache.getEntries();\n        var matchingEntry = entries.find(function (entry) {\n          return resultEqualityCheck(entry.value, value);\n        });\n\n        if (matchingEntry) {\n          value = matchingEntry.value;\n        }\n      }\n\n      cache.put(arguments, value);\n    }\n\n    return value;\n  }\n\n  memoized.clearCache = function () {\n    return cache.clear();\n  };\n\n  return memoized;\n}","import { defaultMemoize, defaultEqualityCheck } from './defaultMemoize';\nexport { defaultMemoize, defaultEqualityCheck };\n\nfunction getDependencies(funcs) {\n  var dependencies = Array.isArray(funcs[0]) ? funcs[0] : funcs;\n\n  if (!dependencies.every(function (dep) {\n    return typeof dep === 'function';\n  })) {\n    var dependencyTypes = dependencies.map(function (dep) {\n      return typeof dep === 'function' ? \"function \" + (dep.name || 'unnamed') + \"()\" : typeof dep;\n    }).join(', ');\n    throw new Error(\"createSelector expects all input-selectors to be functions, but received the following types: [\" + dependencyTypes + \"]\");\n  }\n\n  return dependencies;\n}\n\nexport function createSelectorCreator(memoize) {\n  for (var _len = arguments.length, memoizeOptionsFromArgs = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    memoizeOptionsFromArgs[_key - 1] = arguments[_key];\n  }\n\n  var createSelector = function createSelector() {\n    for (var _len2 = arguments.length, funcs = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      funcs[_key2] = arguments[_key2];\n    }\n\n    var _recomputations = 0;\n\n    var _lastResult; // Due to the intricacies of rest params, we can't do an optional arg after `...funcs`.\n    // So, start by declaring the default value here.\n    // (And yes, the words 'memoize' and 'options' appear too many times in this next sequence.)\n\n\n    var directlyPassedOptions = {\n      memoizeOptions: undefined\n    }; // Normally, the result func or \"output selector\" is the last arg\n\n    var resultFunc = funcs.pop(); // If the result func is actually an _object_, assume it's our options object\n\n    if (typeof resultFunc === 'object') {\n      directlyPassedOptions = resultFunc; // and pop the real result func off\n\n      resultFunc = funcs.pop();\n    }\n\n    if (typeof resultFunc !== 'function') {\n      throw new Error(\"createSelector expects an output function after the inputs, but received: [\" + typeof resultFunc + \"]\");\n    } // Determine which set of options we're using. Prefer options passed directly,\n    // but fall back to options given to createSelectorCreator.\n\n\n    var _directlyPassedOption = directlyPassedOptions,\n        _directlyPassedOption2 = _directlyPassedOption.memoizeOptions,\n        memoizeOptions = _directlyPassedOption2 === void 0 ? memoizeOptionsFromArgs : _directlyPassedOption2; // Simplifying assumption: it's unlikely that the first options arg of the provided memoizer\n    // is an array. In most libs I've looked at, it's an equality function or options object.\n    // Based on that, if `memoizeOptions` _is_ an array, we assume it's a full\n    // user-provided array of options. Otherwise, it must be just the _first_ arg, and so\n    // we wrap it in an array so we can apply it.\n\n    var finalMemoizeOptions = Array.isArray(memoizeOptions) ? memoizeOptions : [memoizeOptions];\n    var dependencies = getDependencies(funcs);\n    var memoizedResultFunc = memoize.apply(void 0, [function recomputationWrapper() {\n      _recomputations++; // apply arguments instead of spreading for performance.\n\n      return resultFunc.apply(null, arguments);\n    }].concat(finalMemoizeOptions)); // If a selector is called with the exact same arguments we don't need to traverse our dependencies again.\n\n    var selector = memoize(function dependenciesChecker() {\n      var params = [];\n      var length = dependencies.length;\n\n      for (var i = 0; i < length; i++) {\n        // apply arguments instead of spreading and mutate a local list of params for performance.\n        // @ts-ignore\n        params.push(dependencies[i].apply(null, arguments));\n      } // apply arguments instead of spreading for performance.\n\n\n      _lastResult = memoizedResultFunc.apply(null, params);\n      return _lastResult;\n    });\n    Object.assign(selector, {\n      resultFunc: resultFunc,\n      memoizedResultFunc: memoizedResultFunc,\n      dependencies: dependencies,\n      lastResult: function lastResult() {\n        return _lastResult;\n      },\n      recomputations: function recomputations() {\n        return _recomputations;\n      },\n      resetRecomputations: function resetRecomputations() {\n        return _recomputations = 0;\n      }\n    });\n    return selector;\n  }; // @ts-ignore\n\n\n  return createSelector;\n}\nexport var createSelector = /* #__PURE__ */createSelectorCreator(defaultMemoize);\n// Manual definition of state and output arguments\nexport var createStructuredSelector = function createStructuredSelector(selectors, selectorCreator) {\n  if (selectorCreator === void 0) {\n    selectorCreator = createSelector;\n  }\n\n  if (typeof selectors !== 'object') {\n    throw new Error('createStructuredSelector expects first argument to be an object ' + (\"where each property is a selector, instead received a \" + typeof selectors));\n  }\n\n  var objectKeys = Object.keys(selectors);\n  var resultSelector = selectorCreator( // @ts-ignore\n  objectKeys.map(function (key) {\n    return selectors[key];\n  }), function () {\n    for (var _len3 = arguments.length, values = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n      values[_key3] = arguments[_key3];\n    }\n\n    return values.reduce(function (composition, value, index) {\n      composition[objectKeys[index]] = value;\n      return composition;\n    }, {});\n  });\n  return resultSelector;\n};","import { createSelector } from '@reduxjs/toolkit';\n\nexport const selectContacts = state => state.contacts.items;\nexport const selectIsLoading = state => state.contacts.isLoading;\nexport const selectError = state => state.contacts.error;\n\nexport const selectFilter = state => state.filter;\n\nexport const selectFilteredContacts = createSelector(\n  [selectContacts, selectFilter],\n  (contacts, filterValue) => {\n    const normalizedFilter = filterValue.toLowerCase();\n\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(normalizedFilter)\n    );\n  }\n);\n","import { useState } from 'react';\nimport { nanoid } from 'nanoid';\nimport {\n  FormWrapper,\n  NameLabel,\n  NameInput,\n  NumberLabel,\n  NumberInput,\n  SubmitBtn,\n} from 'components/ContactForm/ContactForm.styled';\n\nimport { useSelector, useDispatch } from 'react-redux';\nimport { addContact } from 'redux/contacts/contacts-operations';\nimport { selectContacts } from 'redux/contacts/contacts-selectors';\nimport { checkName } from 'service-functions';\n\nexport const ContactForm = () => {\n  const nameInputId = nanoid();\n  const numberInputId = nanoid();\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const handleChange = e => {\n    const { name, value } = e.currentTarget;\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'number':\n        setNumber(value);\n        break;\n      default:\n        return;\n    }\n  };\n\n  const contactItems = useSelector(selectContacts);\n  const dispatch = useDispatch();\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const contact = {\n      name: e.target.elements.name.value,\n      number: e.target.elements.number.value,\n    };\n    if (!checkName(name, contactItems)) {\n      dispatch(addContact(contact));\n    }\n    reset();\n  };\n\n  const reset = () => {\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <FormWrapper onSubmit={handleSubmit}>\n      <NameLabel htmlFor={nameInputId}>Name</NameLabel>\n      <NameInput\n        type=\"text\"\n        name=\"name\"\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n        title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n        required\n        value={name}\n        id={nameInputId}\n        onChange={handleChange}\n      />\n      <NumberLabel htmlFor={numberInputId}>Number</NumberLabel>\n      <NumberInput\n        type=\"tel\"\n        name=\"number\"\n        pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n        title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n        required\n        id={numberInputId}\n        value={number}\n        onChange={handleChange}\n      />\n      <SubmitBtn type=\"submit\">Add contact</SubmitBtn>\n    </FormWrapper>\n  );\n};\n","import { toast } from 'react-toastify';\n\nexport const checkName = (name, contacts) => {\n  const normalizedName = name.toLowerCase();\n  const foundName = contacts.find(\n    contact => contact.name.toLowerCase() === normalizedName\n  );\n  if (foundName) {\n    toast.warning(`${name} is already in contacts.`);\n    return true;\n  }\n};\n","import styled from 'styled-components';\n\nexport const ContactsWrapper = styled.div`\n  margin: 40px auto 0;\n  width: 400px;\n  padding: 10px;\n  border-radius: 4px;\n  border: 3px solid;\n  list-style: none;\n`;\n\nexport const ContactsList = styled.ul`\n  color: black;\n`;\n\nexport const ContactsListItem = styled.li`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n`;\n","import styled from 'styled-components';\n\nexport const ContactData = styled.p`\n  display: flex;\n  align-items: center;\n  padding: 5px 5px;\n\n  &::before {\n    content: '\\u2022';\n    margin-right: 10px;\n    font-size: 26px;\n    color: steelblue;\n    color: black;\n  }\n`;\n\nexport const BtnDelete = styled.button`\n  padding: 4px 8px;\n  font: inherit;\n  cursor: pointer;\n  font-size: 20px;\n  color: white;\n  background: linear-gradient(\n    98.3deg,\n    rgb(0, 0, 0) 10.6%,\n    rgb(255, 0, 0) 97.7%\n  );\n  transition: all 150ms ease-in-out;\n  border-radius: 4px;\n  border: none;\n\n  &:hover {\n    color: white;\n    text-shadow: 0 0 2px black;\n    box-shadow: 0 0 3px 0 black inset, 0 0 3px 2px black;\n  }\n`;\n","import PropTypes from 'prop-types';\nimport { ContactData, BtnDelete } from 'components/Contact/Contact.styled';\n\nimport { useDispatch } from 'react-redux';\nimport { deleteContact } from 'redux/contacts/contacts-operations';\n\nexport const Contact = ({ contact }) => {\n  const { id, name, number } = contact;\n\n  const dispatch = useDispatch();\n  const onDeleteContact = () => dispatch(deleteContact(id));\n\n  return (\n    <>\n      <ContactData>\n        {name}: {number}\n      </ContactData>\n      <BtnDelete type=\"button\" name=\"delete\" onClick={onDeleteContact}>\n        delete\n      </BtnDelete>\n    </>\n  );\n};\n\nContact.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    })\n  ),\n};\n","import { useSelector } from 'react-redux';\nimport {\n  ContactsWrapper,\n  ContactsList,\n  ContactsListItem,\n} from 'components/ContactList/ContactList.styled';\nimport { Contact } from 'components/Contact/Contact';\nimport { selectFilteredContacts } from 'redux/contacts/contacts-selectors';\n\nexport const ContactList = () => {\n  const filteredContacts = useSelector(selectFilteredContacts);\n  return (\n    <ContactsWrapper>\n      <ContactsList>\n        {filteredContacts.map(contact => (\n          <ContactsListItem key={contact.id}>\n            <Contact contact={contact} />\n          </ContactsListItem>\n        ))}\n      </ContactsList>\n    </ContactsWrapper>\n  );\n};\n","import styled from 'styled-components';\n\nexport const FilterWrapper = styled.div`\n  margin: 20px auto 30px auto;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: space-between;\n`;\nexport const FilterLabel = styled.label`\n  color: black;\n  font-size: 20px;\n  margin-bottom: 5px;\n  font-style: italic;\n`;\n\nexport const FilterInput = styled.input`\n  width: 400px;\n  padding: 10px;\n  margin: 5px auto 0;\n  border-radius: 4px;\n  border: 3px solid black;\n\n  &:focus {\n    outline: none;\n    border-color: red;\n    box-shadow: 0 0 3px 0 red inset, 0 0 3px 2px red;\n  }\n`;\n","import {\n  FilterWrapper,\n  FilterLabel,\n  FilterInput,\n} from 'components/Filter/Filter.styled';\n\nimport { useDispatch } from 'react-redux';\nimport { changeFilter } from 'redux/contacts/filter-slice';\nimport { useSelector } from 'react-redux';\nimport { selectFilter } from 'redux/contacts/contacts-selectors';\n\nexport const Filter = () => {\n  const filterValue = useSelector(selectFilter);\n  const dispatch = useDispatch();\n\n  const onChangeFilter = e => {\n    dispatch(changeFilter(e.currentTarget.value));\n  };\n\n  return (\n    <FilterWrapper>\n      <FilterLabel>Find contacts by name</FilterLabel>\n      <FilterInput type=\"text\" value={filterValue} onChange={onChangeFilter} />\n    </FilterWrapper>\n  );\n};\n","import { ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { Title, ContactsTitle, Error, Text } from './Contacts.styled';\nimport { ContactForm } from 'components/ContactForm/ContactForm';\nimport { ContactList } from 'components/ContactList/ContactList';\nimport { Filter } from 'components/Filter/Filter';\nimport { Loader } from 'components/Loader/Loader';\n\nimport { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchContacts } from 'redux/contacts/contacts-operations';\nimport {\n  selectContacts,\n  selectError,\n  selectIsLoading,\n} from 'redux/contacts/contacts-selectors';\n\nconst Contacts = () => {\n  const dispatch = useDispatch();\n  const contactItems = useSelector(selectContacts);\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <>\n      <Title>Phonebook</Title>\n      <ContactForm />\n      <ContactsTitle>Contacts</ContactsTitle>\n      <Filter />\n      {isLoading && !error && <Loader />}\n\n      {contactItems.length > 0 ? (\n        <ContactList />\n      ) : (\n        <Text>\n          Your phonebook is empty. Add first contact!\n        </Text>\n      )}\n      {error && <Error>Oops, sorry, something went wrong...</Error>}\n      <ToastContainer autoClose={3000} />\n    </>\n  );\n};\n\nexport default Contacts;\n","export { urlAlphabet } from './url-alphabet/index.js'\nexport let random = bytes => crypto.getRandomValues(new Uint8Array(bytes))\nexport let customRandom = (alphabet, defaultSize, getRandom) => {\n  let mask = (2 << (Math.log(alphabet.length - 1) / Math.LN2)) - 1\n  let step = -~((1.6 * mask * defaultSize) / alphabet.length)\n  return (size = defaultSize) => {\n    let id = ''\n    while (true) {\n      let bytes = getRandom(step)\n      let j = step\n      while (j--) {\n        id += alphabet[bytes[j] & mask] || ''\n        if (id.length === size) return id\n      }\n    }\n  }\n}\nexport let customAlphabet = (alphabet, size = 21) =>\n  customRandom(alphabet, size, random)\nexport let nanoid = (size = 21) =>\n  crypto.getRandomValues(new Uint8Array(size)).reduce((id, byte) => {\n    byte &= 63\n    if (byte < 36) {\n      id += byte.toString(36)\n    } else if (byte < 62) {\n      id += (byte - 26).toString(36).toUpperCase()\n    } else if (byte > 62) {\n      id += '-'\n    } else {\n      id += '_'\n    }\n    return id\n  }, '')\n"],"names":["ContactsTitle","styled","Title","Text","Error","FormWrapper","NameLabel","NameInput","NumberLabel","NumberInput","SubmitBtn","NOT_FOUND","defaultEqualityCheck","a","b","defaultMemoize","func","equalityCheckOrOptions","providedOptions","equalityCheck","_providedOptions$equa","_providedOptions$maxS","maxSize","resultEqualityCheck","comparator","prev","next","length","i","createCacheKeyComparator","cache","equals","entry","get","key","value","put","getEntries","clear","undefined","createSingletonCache","entries","cacheIndex","findIndex","splice","unshift","pop","createLruCache","memoized","arguments","apply","matchingEntry","find","clearCache","getDependencies","funcs","dependencies","Array","isArray","every","dep","dependencyTypes","map","name","join","createSelectorCreator","memoize","_len","memoizeOptionsFromArgs","_key","createSelector","_len2","_key2","_lastResult","_recomputations","directlyPassedOptions","memoizeOptions","resultFunc","_directlyPassedOption","_directlyPassedOption2","finalMemoizeOptions","memoizedResultFunc","concat","selector","params","push","Object","assign","lastResult","recomputations","resetRecomputations","selectContacts","state","contacts","items","selectIsLoading","isLoading","selectError","error","selectFilter","filter","selectFilteredContacts","filterValue","normalizedFilter","toLowerCase","contact","includes","ContactForm","nameInputId","nanoid","numberInputId","useState","setName","number","setNumber","handleChange","e","currentTarget","contactItems","useSelector","dispatch","useDispatch","reset","onSubmit","preventDefault","target","elements","normalizedName","toast","checkName","addContact","htmlFor","type","pattern","title","required","id","onChange","ContactsWrapper","ContactsList","ContactsListItem","ContactData","BtnDelete","Contact","onClick","deleteContact","ContactList","filteredContacts","FilterWrapper","FilterLabel","FilterInput","Filter","changeFilter","useEffect","fetchContacts","Loader","autoClose","size","crypto","getRandomValues","Uint8Array","reduce","byte","toString","toUpperCase"],"sourceRoot":""}